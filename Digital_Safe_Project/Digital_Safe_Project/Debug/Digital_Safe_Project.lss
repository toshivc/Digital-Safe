
Digital_Safe_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e8a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00000e8a  00000f1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800076  00800076  00000f34  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f34  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  00000fa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fd0  00000000  00000000  00001128  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009bc  00000000  00000000  000020f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f8c  00000000  00000000  00002ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000418  00000000  00000000  00003a40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000062f  00000000  00000000  00003e58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007a7  00000000  00000000  00004487  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  00004c2e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3b 00 	jmp	0x76	; 0x76 <__ctors_end>
   4:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   8:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  10:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  14:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  18:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  1c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  20:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  24:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  28:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  2c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  30:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  34:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  38:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  3c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  40:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  44:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  48:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  4c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  50:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  54:	5a 02       	muls	r21, r26
  56:	5c 02       	muls	r21, r28
  58:	5e 02       	muls	r21, r30
  5a:	60 02       	muls	r22, r16
  5c:	62 02       	muls	r22, r18
  5e:	64 02       	muls	r22, r20
  60:	66 02       	muls	r22, r22
  62:	68 02       	muls	r22, r24
  64:	6a 02       	muls	r22, r26
  66:	6c 02       	muls	r22, r28
  68:	70 02       	muls	r23, r16
  6a:	72 02       	muls	r23, r18
  6c:	74 02       	muls	r23, r20
  6e:	76 02       	muls	r23, r22
  70:	78 02       	muls	r23, r24
  72:	78 02       	muls	r23, r24
  74:	6e 02       	muls	r22, r30

00000076 <__ctors_end>:
  76:	11 24       	eor	r1, r1
  78:	1f be       	out	0x3f, r1	; 63
  7a:	cf e5       	ldi	r28, 0x5F	; 95
  7c:	d8 e0       	ldi	r29, 0x08	; 8
  7e:	de bf       	out	0x3e, r29	; 62
  80:	cd bf       	out	0x3d, r28	; 61

00000082 <__do_copy_data>:
  82:	10 e0       	ldi	r17, 0x00	; 0
  84:	a0 e6       	ldi	r26, 0x60	; 96
  86:	b0 e0       	ldi	r27, 0x00	; 0
  88:	ea e8       	ldi	r30, 0x8A	; 138
  8a:	fe e0       	ldi	r31, 0x0E	; 14
  8c:	02 c0       	rjmp	.+4      	; 0x92 <__do_copy_data+0x10>
  8e:	05 90       	lpm	r0, Z+
  90:	0d 92       	st	X+, r0
  92:	a6 37       	cpi	r26, 0x76	; 118
  94:	b1 07       	cpc	r27, r17
  96:	d9 f7       	brne	.-10     	; 0x8e <__do_copy_data+0xc>

00000098 <__do_clear_bss>:
  98:	20 e0       	ldi	r18, 0x00	; 0
  9a:	a6 e7       	ldi	r26, 0x76	; 118
  9c:	b0 e0       	ldi	r27, 0x00	; 0
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	aa 37       	cpi	r26, 0x7A	; 122
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <main>
  ac:	0c 94 43 07 	jmp	0xe86	; 0xe86 <_exit>

000000b0 <__bad_interrupt>:
  b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b4 <delay_ms>:
  b4:	cf 93       	push	r28
  b6:	df 93       	push	r29
  b8:	00 d0       	rcall	.+0      	; 0xba <delay_ms+0x6>
  ba:	00 d0       	rcall	.+0      	; 0xbc <delay_ms+0x8>
  bc:	cd b7       	in	r28, 0x3d	; 61
  be:	de b7       	in	r29, 0x3e	; 62
  c0:	9c 83       	std	Y+4, r25	; 0x04
  c2:	8b 83       	std	Y+3, r24	; 0x03
  c4:	82 e5       	ldi	r24, 0x52	; 82
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	fc 01       	movw	r30, r24
  ca:	10 82       	st	Z, r1
  cc:	8c e5       	ldi	r24, 0x5C	; 92
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	2c e0       	ldi	r18, 0x0C	; 12
  d2:	fc 01       	movw	r30, r24
  d4:	20 83       	st	Z, r18
  d6:	88 e5       	ldi	r24, 0x58	; 88
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	22 e0       	ldi	r18, 0x02	; 2
  dc:	fc 01       	movw	r30, r24
  de:	20 83       	st	Z, r18
  e0:	1a 82       	std	Y+2, r1	; 0x02
  e2:	19 82       	std	Y+1, r1	; 0x01
  e4:	00 00       	nop
  e6:	88 e5       	ldi	r24, 0x58	; 88
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	fc 01       	movw	r30, r24
  ec:	80 81       	ld	r24, Z
  ee:	88 2f       	mov	r24, r24
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	82 70       	andi	r24, 0x02	; 2
  f4:	99 27       	eor	r25, r25
  f6:	89 2b       	or	r24, r25
  f8:	b1 f3       	breq	.-20     	; 0xe6 <delay_ms+0x32>
  fa:	82 e5       	ldi	r24, 0x52	; 82
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	fc 01       	movw	r30, r24
 100:	10 82       	st	Z, r1
 102:	88 e5       	ldi	r24, 0x58	; 88
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	22 e0       	ldi	r18, 0x02	; 2
 108:	fc 01       	movw	r30, r24
 10a:	20 83       	st	Z, r18
 10c:	89 81       	ldd	r24, Y+1	; 0x01
 10e:	9a 81       	ldd	r25, Y+2	; 0x02
 110:	01 96       	adiw	r24, 0x01	; 1
 112:	9a 83       	std	Y+2, r25	; 0x02
 114:	89 83       	std	Y+1, r24	; 0x01
 116:	29 81       	ldd	r18, Y+1	; 0x01
 118:	3a 81       	ldd	r19, Y+2	; 0x02
 11a:	8b 81       	ldd	r24, Y+3	; 0x03
 11c:	9c 81       	ldd	r25, Y+4	; 0x04
 11e:	28 17       	cp	r18, r24
 120:	39 07       	cpc	r19, r25
 122:	08 f4       	brcc	.+2      	; 0x126 <delay_ms+0x72>
 124:	df cf       	rjmp	.-66     	; 0xe4 <delay_ms+0x30>
 126:	00 00       	nop
 128:	0f 90       	pop	r0
 12a:	0f 90       	pop	r0
 12c:	0f 90       	pop	r0
 12e:	0f 90       	pop	r0
 130:	df 91       	pop	r29
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <delay_sec>:
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	00 d0       	rcall	.+0      	; 0x13c <delay_sec+0x6>
 13c:	00 d0       	rcall	.+0      	; 0x13e <delay_sec+0x8>
 13e:	cd b7       	in	r28, 0x3d	; 61
 140:	de b7       	in	r29, 0x3e	; 62
 142:	9c 83       	std	Y+4, r25	; 0x04
 144:	8b 83       	std	Y+3, r24	; 0x03
 146:	8c e4       	ldi	r24, 0x4C	; 76
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	fc 01       	movw	r30, r24
 14c:	11 82       	std	Z+1, r1	; 0x01
 14e:	10 82       	st	Z, r1
 150:	8a e4       	ldi	r24, 0x4A	; 74
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	27 ec       	ldi	r18, 0xC7	; 199
 156:	3d e2       	ldi	r19, 0x2D	; 45
 158:	fc 01       	movw	r30, r24
 15a:	31 83       	std	Z+1, r19	; 0x01
 15c:	20 83       	st	Z, r18
 15e:	88 e5       	ldi	r24, 0x58	; 88
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	20 e1       	ldi	r18, 0x10	; 16
 164:	fc 01       	movw	r30, r24
 166:	20 83       	st	Z, r18
 168:	1a 82       	std	Y+2, r1	; 0x02
 16a:	19 82       	std	Y+1, r1	; 0x01
 16c:	00 00       	nop
 16e:	88 e5       	ldi	r24, 0x58	; 88
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	fc 01       	movw	r30, r24
 174:	80 81       	ld	r24, Z
 176:	88 2f       	mov	r24, r24
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	80 71       	andi	r24, 0x10	; 16
 17c:	99 27       	eor	r25, r25
 17e:	89 2b       	or	r24, r25
 180:	b1 f3       	breq	.-20     	; 0x16e <delay_sec+0x38>
 182:	8c e4       	ldi	r24, 0x4C	; 76
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	fc 01       	movw	r30, r24
 188:	11 82       	std	Z+1, r1	; 0x01
 18a:	10 82       	st	Z, r1
 18c:	88 e5       	ldi	r24, 0x58	; 88
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	20 e1       	ldi	r18, 0x10	; 16
 192:	fc 01       	movw	r30, r24
 194:	20 83       	st	Z, r18
 196:	89 81       	ldd	r24, Y+1	; 0x01
 198:	9a 81       	ldd	r25, Y+2	; 0x02
 19a:	01 96       	adiw	r24, 0x01	; 1
 19c:	9a 83       	std	Y+2, r25	; 0x02
 19e:	89 83       	std	Y+1, r24	; 0x01
 1a0:	29 81       	ldd	r18, Y+1	; 0x01
 1a2:	3a 81       	ldd	r19, Y+2	; 0x02
 1a4:	8b 81       	ldd	r24, Y+3	; 0x03
 1a6:	9c 81       	ldd	r25, Y+4	; 0x04
 1a8:	28 17       	cp	r18, r24
 1aa:	39 07       	cpc	r19, r25
 1ac:	08 f4       	brcc	.+2      	; 0x1b0 <delay_sec+0x7a>
 1ae:	de cf       	rjmp	.-68     	; 0x16c <delay_sec+0x36>
 1b0:	00 00       	nop
 1b2:	0f 90       	pop	r0
 1b4:	0f 90       	pop	r0
 1b6:	0f 90       	pop	r0
 1b8:	0f 90       	pop	r0
 1ba:	df 91       	pop	r29
 1bc:	cf 91       	pop	r28
 1be:	08 95       	ret

000001c0 <displayUnlock>:
 1c0:	cf 93       	push	r28
 1c2:	df 93       	push	r29
 1c4:	00 d0       	rcall	.+0      	; 0x1c6 <displayUnlock+0x6>
 1c6:	00 d0       	rcall	.+0      	; 0x1c8 <displayUnlock+0x8>
 1c8:	cd b7       	in	r28, 0x3d	; 61
 1ca:	de b7       	in	r29, 0x3e	; 62
 1cc:	1a 82       	std	Y+2, r1	; 0x02
 1ce:	19 82       	std	Y+1, r1	; 0x01
 1d0:	1b c0       	rjmp	.+54     	; 0x208 <displayUnlock+0x48>
 1d2:	88 e3       	ldi	r24, 0x38	; 56
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	29 81       	ldd	r18, Y+1	; 0x01
 1d8:	3a 81       	ldd	r19, Y+2	; 0x02
 1da:	22 0f       	add	r18, r18
 1dc:	33 1f       	adc	r19, r19
 1de:	a9 01       	movw	r20, r18
 1e0:	4f 5f       	subi	r20, 0xFF	; 255
 1e2:	5f 4f       	sbci	r21, 0xFF	; 255
 1e4:	21 e0       	ldi	r18, 0x01	; 1
 1e6:	30 e0       	ldi	r19, 0x00	; 0
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <displayUnlock+0x2e>
 1ea:	22 0f       	add	r18, r18
 1ec:	33 1f       	adc	r19, r19
 1ee:	4a 95       	dec	r20
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <displayUnlock+0x2a>
 1f2:	fc 01       	movw	r30, r24
 1f4:	20 83       	st	Z, r18
 1f6:	84 e6       	ldi	r24, 0x64	; 100
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 1fe:	89 81       	ldd	r24, Y+1	; 0x01
 200:	9a 81       	ldd	r25, Y+2	; 0x02
 202:	01 96       	adiw	r24, 0x01	; 1
 204:	9a 83       	std	Y+2, r25	; 0x02
 206:	89 83       	std	Y+1, r24	; 0x01
 208:	89 81       	ldd	r24, Y+1	; 0x01
 20a:	9a 81       	ldd	r25, Y+2	; 0x02
 20c:	04 97       	sbiw	r24, 0x04	; 4
 20e:	0c f3       	brlt	.-62     	; 0x1d2 <displayUnlock+0x12>
 210:	1c 82       	std	Y+4, r1	; 0x04
 212:	1b 82       	std	Y+3, r1	; 0x03
 214:	1c c0       	rjmp	.+56     	; 0x24e <displayUnlock+0x8e>
 216:	88 e3       	ldi	r24, 0x38	; 56
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	2b 81       	ldd	r18, Y+3	; 0x03
 21c:	3c 81       	ldd	r19, Y+4	; 0x04
 21e:	22 0f       	add	r18, r18
 220:	33 1f       	adc	r19, r19
 222:	47 e0       	ldi	r20, 0x07	; 7
 224:	50 e0       	ldi	r21, 0x00	; 0
 226:	42 1b       	sub	r20, r18
 228:	53 0b       	sbc	r21, r19
 22a:	21 e0       	ldi	r18, 0x01	; 1
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	02 c0       	rjmp	.+4      	; 0x234 <displayUnlock+0x74>
 230:	22 0f       	add	r18, r18
 232:	33 1f       	adc	r19, r19
 234:	4a 95       	dec	r20
 236:	e2 f7       	brpl	.-8      	; 0x230 <displayUnlock+0x70>
 238:	fc 01       	movw	r30, r24
 23a:	20 83       	st	Z, r18
 23c:	84 e6       	ldi	r24, 0x64	; 100
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 244:	8b 81       	ldd	r24, Y+3	; 0x03
 246:	9c 81       	ldd	r25, Y+4	; 0x04
 248:	01 96       	adiw	r24, 0x01	; 1
 24a:	9c 83       	std	Y+4, r25	; 0x04
 24c:	8b 83       	std	Y+3, r24	; 0x03
 24e:	8b 81       	ldd	r24, Y+3	; 0x03
 250:	9c 81       	ldd	r25, Y+4	; 0x04
 252:	04 97       	sbiw	r24, 0x04	; 4
 254:	04 f3       	brlt	.-64     	; 0x216 <displayUnlock+0x56>
 256:	88 e3       	ldi	r24, 0x38	; 56
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	fc 01       	movw	r30, r24
 25c:	10 82       	st	Z, r1
 25e:	84 e6       	ldi	r24, 0x64	; 100
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 266:	88 e3       	ldi	r24, 0x38	; 56
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	2a ea       	ldi	r18, 0xAA	; 170
 26c:	fc 01       	movw	r30, r24
 26e:	20 83       	st	Z, r18
 270:	00 00       	nop
 272:	0f 90       	pop	r0
 274:	0f 90       	pop	r0
 276:	0f 90       	pop	r0
 278:	0f 90       	pop	r0
 27a:	df 91       	pop	r29
 27c:	cf 91       	pop	r28
 27e:	08 95       	ret

00000280 <displayUnlockProg>:
 280:	cf 93       	push	r28
 282:	df 93       	push	r29
 284:	00 d0       	rcall	.+0      	; 0x286 <displayUnlockProg+0x6>
 286:	00 d0       	rcall	.+0      	; 0x288 <displayUnlockProg+0x8>
 288:	cd b7       	in	r28, 0x3d	; 61
 28a:	de b7       	in	r29, 0x3e	; 62
 28c:	1a 82       	std	Y+2, r1	; 0x02
 28e:	19 82       	std	Y+1, r1	; 0x01
 290:	1b c0       	rjmp	.+54     	; 0x2c8 <displayUnlockProg+0x48>
 292:	88 e3       	ldi	r24, 0x38	; 56
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	29 81       	ldd	r18, Y+1	; 0x01
 298:	3a 81       	ldd	r19, Y+2	; 0x02
 29a:	22 0f       	add	r18, r18
 29c:	33 1f       	adc	r19, r19
 29e:	a9 01       	movw	r20, r18
 2a0:	4f 5f       	subi	r20, 0xFF	; 255
 2a2:	5f 4f       	sbci	r21, 0xFF	; 255
 2a4:	21 e0       	ldi	r18, 0x01	; 1
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <displayUnlockProg+0x2e>
 2aa:	22 0f       	add	r18, r18
 2ac:	33 1f       	adc	r19, r19
 2ae:	4a 95       	dec	r20
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <displayUnlockProg+0x2a>
 2b2:	fc 01       	movw	r30, r24
 2b4:	20 83       	st	Z, r18
 2b6:	84 e6       	ldi	r24, 0x64	; 100
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 2be:	89 81       	ldd	r24, Y+1	; 0x01
 2c0:	9a 81       	ldd	r25, Y+2	; 0x02
 2c2:	01 96       	adiw	r24, 0x01	; 1
 2c4:	9a 83       	std	Y+2, r25	; 0x02
 2c6:	89 83       	std	Y+1, r24	; 0x01
 2c8:	89 81       	ldd	r24, Y+1	; 0x01
 2ca:	9a 81       	ldd	r25, Y+2	; 0x02
 2cc:	04 97       	sbiw	r24, 0x04	; 4
 2ce:	0c f3       	brlt	.-62     	; 0x292 <displayUnlockProg+0x12>
 2d0:	1c 82       	std	Y+4, r1	; 0x04
 2d2:	1b 82       	std	Y+3, r1	; 0x03
 2d4:	1c c0       	rjmp	.+56     	; 0x30e <displayUnlockProg+0x8e>
 2d6:	88 e3       	ldi	r24, 0x38	; 56
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	2b 81       	ldd	r18, Y+3	; 0x03
 2dc:	3c 81       	ldd	r19, Y+4	; 0x04
 2de:	22 0f       	add	r18, r18
 2e0:	33 1f       	adc	r19, r19
 2e2:	47 e0       	ldi	r20, 0x07	; 7
 2e4:	50 e0       	ldi	r21, 0x00	; 0
 2e6:	42 1b       	sub	r20, r18
 2e8:	53 0b       	sbc	r21, r19
 2ea:	21 e0       	ldi	r18, 0x01	; 1
 2ec:	30 e0       	ldi	r19, 0x00	; 0
 2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <displayUnlockProg+0x74>
 2f0:	22 0f       	add	r18, r18
 2f2:	33 1f       	adc	r19, r19
 2f4:	4a 95       	dec	r20
 2f6:	e2 f7       	brpl	.-8      	; 0x2f0 <displayUnlockProg+0x70>
 2f8:	fc 01       	movw	r30, r24
 2fa:	20 83       	st	Z, r18
 2fc:	84 e6       	ldi	r24, 0x64	; 100
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 304:	8b 81       	ldd	r24, Y+3	; 0x03
 306:	9c 81       	ldd	r25, Y+4	; 0x04
 308:	01 96       	adiw	r24, 0x01	; 1
 30a:	9c 83       	std	Y+4, r25	; 0x04
 30c:	8b 83       	std	Y+3, r24	; 0x03
 30e:	8b 81       	ldd	r24, Y+3	; 0x03
 310:	9c 81       	ldd	r25, Y+4	; 0x04
 312:	04 97       	sbiw	r24, 0x04	; 4
 314:	04 f3       	brlt	.-64     	; 0x2d6 <displayUnlockProg+0x56>
 316:	88 e3       	ldi	r24, 0x38	; 56
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	fc 01       	movw	r30, r24
 31c:	10 82       	st	Z, r1
 31e:	00 00       	nop
 320:	0f 90       	pop	r0
 322:	0f 90       	pop	r0
 324:	0f 90       	pop	r0
 326:	0f 90       	pop	r0
 328:	df 91       	pop	r29
 32a:	cf 91       	pop	r28
 32c:	08 95       	ret

0000032e <displayLock>:
 32e:	cf 93       	push	r28
 330:	df 93       	push	r29
 332:	00 d0       	rcall	.+0      	; 0x334 <displayLock+0x6>
 334:	00 d0       	rcall	.+0      	; 0x336 <displayLock+0x8>
 336:	cd b7       	in	r28, 0x3d	; 61
 338:	de b7       	in	r29, 0x3e	; 62
 33a:	1a 82       	std	Y+2, r1	; 0x02
 33c:	19 82       	std	Y+1, r1	; 0x01
 33e:	19 c0       	rjmp	.+50     	; 0x372 <displayLock+0x44>
 340:	88 e3       	ldi	r24, 0x38	; 56
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	29 81       	ldd	r18, Y+1	; 0x01
 346:	3a 81       	ldd	r19, Y+2	; 0x02
 348:	a9 01       	movw	r20, r18
 34a:	44 0f       	add	r20, r20
 34c:	55 1f       	adc	r21, r21
 34e:	21 e0       	ldi	r18, 0x01	; 1
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	02 c0       	rjmp	.+4      	; 0x358 <displayLock+0x2a>
 354:	22 0f       	add	r18, r18
 356:	33 1f       	adc	r19, r19
 358:	4a 95       	dec	r20
 35a:	e2 f7       	brpl	.-8      	; 0x354 <displayLock+0x26>
 35c:	fc 01       	movw	r30, r24
 35e:	20 83       	st	Z, r18
 360:	84 e6       	ldi	r24, 0x64	; 100
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 368:	89 81       	ldd	r24, Y+1	; 0x01
 36a:	9a 81       	ldd	r25, Y+2	; 0x02
 36c:	01 96       	adiw	r24, 0x01	; 1
 36e:	9a 83       	std	Y+2, r25	; 0x02
 370:	89 83       	std	Y+1, r24	; 0x01
 372:	89 81       	ldd	r24, Y+1	; 0x01
 374:	9a 81       	ldd	r25, Y+2	; 0x02
 376:	04 97       	sbiw	r24, 0x04	; 4
 378:	1c f3       	brlt	.-58     	; 0x340 <displayLock+0x12>
 37a:	1c 82       	std	Y+4, r1	; 0x04
 37c:	1b 82       	std	Y+3, r1	; 0x03
 37e:	1f c0       	rjmp	.+62     	; 0x3be <displayLock+0x90>
 380:	88 e3       	ldi	r24, 0x38	; 56
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	44 e0       	ldi	r20, 0x04	; 4
 386:	50 e0       	ldi	r21, 0x00	; 0
 388:	2b 81       	ldd	r18, Y+3	; 0x03
 38a:	3c 81       	ldd	r19, Y+4	; 0x04
 38c:	ba 01       	movw	r22, r20
 38e:	62 1b       	sub	r22, r18
 390:	73 0b       	sbc	r23, r19
 392:	9b 01       	movw	r18, r22
 394:	a9 01       	movw	r20, r18
 396:	44 0f       	add	r20, r20
 398:	55 1f       	adc	r21, r21
 39a:	21 e0       	ldi	r18, 0x01	; 1
 39c:	30 e0       	ldi	r19, 0x00	; 0
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <displayLock+0x76>
 3a0:	22 0f       	add	r18, r18
 3a2:	33 1f       	adc	r19, r19
 3a4:	4a 95       	dec	r20
 3a6:	e2 f7       	brpl	.-8      	; 0x3a0 <displayLock+0x72>
 3a8:	fc 01       	movw	r30, r24
 3aa:	20 83       	st	Z, r18
 3ac:	84 e6       	ldi	r24, 0x64	; 100
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 3b4:	8b 81       	ldd	r24, Y+3	; 0x03
 3b6:	9c 81       	ldd	r25, Y+4	; 0x04
 3b8:	01 96       	adiw	r24, 0x01	; 1
 3ba:	9c 83       	std	Y+4, r25	; 0x04
 3bc:	8b 83       	std	Y+3, r24	; 0x03
 3be:	8b 81       	ldd	r24, Y+3	; 0x03
 3c0:	9c 81       	ldd	r25, Y+4	; 0x04
 3c2:	05 97       	sbiw	r24, 0x05	; 5
 3c4:	ec f2       	brlt	.-70     	; 0x380 <displayLock+0x52>
 3c6:	88 e3       	ldi	r24, 0x38	; 56
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	fc 01       	movw	r30, r24
 3cc:	10 82       	st	Z, r1
 3ce:	00 00       	nop
 3d0:	0f 90       	pop	r0
 3d2:	0f 90       	pop	r0
 3d4:	0f 90       	pop	r0
 3d6:	0f 90       	pop	r0
 3d8:	df 91       	pop	r29
 3da:	cf 91       	pop	r28
 3dc:	08 95       	ret

000003de <displayProgramming>:
 3de:	cf 93       	push	r28
 3e0:	df 93       	push	r29
 3e2:	00 d0       	rcall	.+0      	; 0x3e4 <displayProgramming+0x6>
 3e4:	cd b7       	in	r28, 0x3d	; 61
 3e6:	de b7       	in	r29, 0x3e	; 62
 3e8:	1a 82       	std	Y+2, r1	; 0x02
 3ea:	19 82       	std	Y+1, r1	; 0x01
 3ec:	16 c0       	rjmp	.+44     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3ee:	88 e3       	ldi	r24, 0x38	; 56
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	2f ef       	ldi	r18, 0xFF	; 255
 3f4:	fc 01       	movw	r30, r24
 3f6:	20 83       	st	Z, r18
 3f8:	84 e6       	ldi	r24, 0x64	; 100
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 400:	88 e3       	ldi	r24, 0x38	; 56
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	fc 01       	movw	r30, r24
 406:	10 82       	st	Z, r1
 408:	84 e6       	ldi	r24, 0x64	; 100
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 410:	89 81       	ldd	r24, Y+1	; 0x01
 412:	9a 81       	ldd	r25, Y+2	; 0x02
 414:	01 96       	adiw	r24, 0x01	; 1
 416:	9a 83       	std	Y+2, r25	; 0x02
 418:	89 83       	std	Y+1, r24	; 0x01
 41a:	89 81       	ldd	r24, Y+1	; 0x01
 41c:	9a 81       	ldd	r25, Y+2	; 0x02
 41e:	06 97       	sbiw	r24, 0x06	; 6
 420:	34 f3       	brlt	.-52     	; 0x3ee <displayProgramming+0x10>
 422:	00 00       	nop
 424:	0f 90       	pop	r0
 426:	0f 90       	pop	r0
 428:	df 91       	pop	r29
 42a:	cf 91       	pop	r28
 42c:	08 95       	ret

0000042e <displayIncorrect>:
 42e:	cf 93       	push	r28
 430:	df 93       	push	r29
 432:	00 d0       	rcall	.+0      	; 0x434 <displayIncorrect+0x6>
 434:	cd b7       	in	r28, 0x3d	; 61
 436:	de b7       	in	r29, 0x3e	; 62
 438:	1a 82       	std	Y+2, r1	; 0x02
 43a:	19 82       	std	Y+1, r1	; 0x01
 43c:	16 c0       	rjmp	.+44     	; 0x46a <displayIncorrect+0x3c>
 43e:	88 e3       	ldi	r24, 0x38	; 56
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	25 e5       	ldi	r18, 0x55	; 85
 444:	fc 01       	movw	r30, r24
 446:	20 83       	st	Z, r18
 448:	80 e5       	ldi	r24, 0x50	; 80
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 450:	88 e3       	ldi	r24, 0x38	; 56
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	fc 01       	movw	r30, r24
 456:	10 82       	st	Z, r1
 458:	80 e5       	ldi	r24, 0x50	; 80
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 460:	89 81       	ldd	r24, Y+1	; 0x01
 462:	9a 81       	ldd	r25, Y+2	; 0x02
 464:	01 96       	adiw	r24, 0x01	; 1
 466:	9a 83       	std	Y+2, r25	; 0x02
 468:	89 83       	std	Y+1, r24	; 0x01
 46a:	89 81       	ldd	r24, Y+1	; 0x01
 46c:	9a 81       	ldd	r25, Y+2	; 0x02
 46e:	04 97       	sbiw	r24, 0x04	; 4
 470:	34 f3       	brlt	.-52     	; 0x43e <displayIncorrect+0x10>
 472:	00 00       	nop
 474:	0f 90       	pop	r0
 476:	0f 90       	pop	r0
 478:	df 91       	pop	r29
 47a:	cf 91       	pop	r28
 47c:	08 95       	ret

0000047e <displayKeys>:
 47e:	cf 93       	push	r28
 480:	df 93       	push	r29
 482:	1f 92       	push	r1
 484:	cd b7       	in	r28, 0x3d	; 61
 486:	de b7       	in	r29, 0x3e	; 62
 488:	89 83       	std	Y+1, r24	; 0x01
 48a:	89 81       	ldd	r24, Y+1	; 0x01
 48c:	88 2f       	mov	r24, r24
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	09 2e       	mov	r0, r25
 492:	00 0c       	add	r0, r0
 494:	aa 0b       	sbc	r26, r26
 496:	bb 0b       	sbc	r27, r27
 498:	40 e0       	ldi	r20, 0x00	; 0
 49a:	50 e0       	ldi	r21, 0x00	; 0
 49c:	20 e1       	ldi	r18, 0x10	; 16
 49e:	30 e0       	ldi	r19, 0x00	; 0
 4a0:	84 1b       	sub	r24, r20
 4a2:	95 0b       	sbc	r25, r21
 4a4:	28 17       	cp	r18, r24
 4a6:	39 07       	cpc	r19, r25
 4a8:	18 f1       	brcs	.+70     	; 0x4f0 <displayKeys+0x72>
 4aa:	86 5d       	subi	r24, 0xD6	; 214
 4ac:	9f 4f       	sbci	r25, 0xFF	; 255
 4ae:	fc 01       	movw	r30, r24
 4b0:	0c 94 3d 07 	jmp	0xe7a	; 0xe7a <__tablejump2__>
 4b4:	80 e0       	ldi	r24, 0x00	; 0
 4b6:	1d c0       	rjmp	.+58     	; 0x4f2 <displayKeys+0x74>
 4b8:	81 e0       	ldi	r24, 0x01	; 1
 4ba:	1b c0       	rjmp	.+54     	; 0x4f2 <displayKeys+0x74>
 4bc:	82 e0       	ldi	r24, 0x02	; 2
 4be:	19 c0       	rjmp	.+50     	; 0x4f2 <displayKeys+0x74>
 4c0:	84 e0       	ldi	r24, 0x04	; 4
 4c2:	17 c0       	rjmp	.+46     	; 0x4f2 <displayKeys+0x74>
 4c4:	88 e0       	ldi	r24, 0x08	; 8
 4c6:	15 c0       	rjmp	.+42     	; 0x4f2 <displayKeys+0x74>
 4c8:	80 e1       	ldi	r24, 0x10	; 16
 4ca:	13 c0       	rjmp	.+38     	; 0x4f2 <displayKeys+0x74>
 4cc:	80 e2       	ldi	r24, 0x20	; 32
 4ce:	11 c0       	rjmp	.+34     	; 0x4f2 <displayKeys+0x74>
 4d0:	80 e4       	ldi	r24, 0x40	; 64
 4d2:	0f c0       	rjmp	.+30     	; 0x4f2 <displayKeys+0x74>
 4d4:	80 e8       	ldi	r24, 0x80	; 128
 4d6:	0d c0       	rjmp	.+26     	; 0x4f2 <displayKeys+0x74>
 4d8:	81 e8       	ldi	r24, 0x81	; 129
 4da:	0b c0       	rjmp	.+22     	; 0x4f2 <displayKeys+0x74>
 4dc:	80 e1       	ldi	r24, 0x10	; 16
 4de:	09 c0       	rjmp	.+18     	; 0x4f2 <displayKeys+0x74>
 4e0:	83 e0       	ldi	r24, 0x03	; 3
 4e2:	07 c0       	rjmp	.+14     	; 0x4f2 <displayKeys+0x74>
 4e4:	8c e0       	ldi	r24, 0x0C	; 12
 4e6:	05 c0       	rjmp	.+10     	; 0x4f2 <displayKeys+0x74>
 4e8:	80 e3       	ldi	r24, 0x30	; 48
 4ea:	03 c0       	rjmp	.+6      	; 0x4f2 <displayKeys+0x74>
 4ec:	80 ec       	ldi	r24, 0xC0	; 192
 4ee:	01 c0       	rjmp	.+2      	; 0x4f2 <displayKeys+0x74>
 4f0:	80 e0       	ldi	r24, 0x00	; 0
 4f2:	0f 90       	pop	r0
 4f4:	df 91       	pop	r29
 4f6:	cf 91       	pop	r28
 4f8:	08 95       	ret

000004fa <displayLockout>:
 4fa:	cf 93       	push	r28
 4fc:	df 93       	push	r29
 4fe:	cd b7       	in	r28, 0x3d	; 61
 500:	de b7       	in	r29, 0x3e	; 62
 502:	88 e3       	ldi	r24, 0x38	; 56
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	25 e5       	ldi	r18, 0x55	; 85
 508:	fc 01       	movw	r30, r24
 50a:	20 83       	st	Z, r18
 50c:	88 e7       	ldi	r24, 0x78	; 120
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	0e 94 9b 00 	call	0x136	; 0x136 <delay_sec>
 514:	88 e3       	ldi	r24, 0x38	; 56
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	fc 01       	movw	r30, r24
 51a:	10 82       	st	Z, r1
 51c:	00 00       	nop
 51e:	df 91       	pop	r29
 520:	cf 91       	pop	r28
 522:	08 95       	ret

00000524 <displayUser>:
 524:	cf 93       	push	r28
 526:	df 93       	push	r29
 528:	1f 92       	push	r1
 52a:	cd b7       	in	r28, 0x3d	; 61
 52c:	de b7       	in	r29, 0x3e	; 62
 52e:	89 83       	std	Y+1, r24	; 0x01
 530:	89 81       	ldd	r24, Y+1	; 0x01
 532:	88 2f       	mov	r24, r24
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	8b 30       	cpi	r24, 0x0B	; 11
 538:	91 05       	cpc	r25, r1
 53a:	91 f0       	breq	.+36     	; 0x560 <displayUser+0x3c>
 53c:	8c 30       	cpi	r24, 0x0C	; 12
 53e:	91 05       	cpc	r25, r1
 540:	1c f4       	brge	.+6      	; 0x548 <displayUser+0x24>
 542:	0a 97       	sbiw	r24, 0x0a	; 10
 544:	39 f0       	breq	.+14     	; 0x554 <displayUser+0x30>
 546:	1e c0       	rjmp	.+60     	; 0x584 <displayUser+0x60>
 548:	8c 30       	cpi	r24, 0x0C	; 12
 54a:	91 05       	cpc	r25, r1
 54c:	79 f0       	breq	.+30     	; 0x56c <displayUser+0x48>
 54e:	0d 97       	sbiw	r24, 0x0d	; 13
 550:	99 f0       	breq	.+38     	; 0x578 <displayUser+0x54>
 552:	18 c0       	rjmp	.+48     	; 0x584 <displayUser+0x60>
 554:	88 e3       	ldi	r24, 0x38	; 56
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	23 e0       	ldi	r18, 0x03	; 3
 55a:	fc 01       	movw	r30, r24
 55c:	20 83       	st	Z, r18
 55e:	12 c0       	rjmp	.+36     	; 0x584 <displayUser+0x60>
 560:	88 e3       	ldi	r24, 0x38	; 56
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	2c e0       	ldi	r18, 0x0C	; 12
 566:	fc 01       	movw	r30, r24
 568:	20 83       	st	Z, r18
 56a:	0c c0       	rjmp	.+24     	; 0x584 <displayUser+0x60>
 56c:	88 e3       	ldi	r24, 0x38	; 56
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	20 e3       	ldi	r18, 0x30	; 48
 572:	fc 01       	movw	r30, r24
 574:	20 83       	st	Z, r18
 576:	06 c0       	rjmp	.+12     	; 0x584 <displayUser+0x60>
 578:	88 e3       	ldi	r24, 0x38	; 56
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	20 ec       	ldi	r18, 0xC0	; 192
 57e:	fc 01       	movw	r30, r24
 580:	20 83       	st	Z, r18
 582:	00 00       	nop
 584:	0f 90       	pop	r0
 586:	df 91       	pop	r29
 588:	cf 91       	pop	r28
 58a:	08 95       	ret

0000058c <write_EEPROM>:
 58c:	cf 93       	push	r28
 58e:	df 93       	push	r29
 590:	00 d0       	rcall	.+0      	; 0x592 <write_EEPROM+0x6>
 592:	1f 92       	push	r1
 594:	cd b7       	in	r28, 0x3d	; 61
 596:	de b7       	in	r29, 0x3e	; 62
 598:	89 83       	std	Y+1, r24	; 0x01
 59a:	7b 83       	std	Y+3, r23	; 0x03
 59c:	6a 83       	std	Y+2, r22	; 0x02
 59e:	8a 81       	ldd	r24, Y+2	; 0x02
 5a0:	9b 81       	ldd	r25, Y+3	; 0x03
 5a2:	81 30       	cpi	r24, 0x01	; 1
 5a4:	94 40       	sbci	r25, 0x04	; 4
 5a6:	20 f0       	brcs	.+8      	; 0x5b0 <write_EEPROM+0x24>
 5a8:	83 e0       	ldi	r24, 0x03	; 3
 5aa:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__data_end>
 5ae:	1a c0       	rjmp	.+52     	; 0x5e4 <write_EEPROM+0x58>
 5b0:	00 00       	nop
 5b2:	8c e3       	ldi	r24, 0x3C	; 60
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	fc 01       	movw	r30, r24
 5b8:	80 81       	ld	r24, Z
 5ba:	88 2f       	mov	r24, r24
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	82 70       	andi	r24, 0x02	; 2
 5c0:	99 27       	eor	r25, r25
 5c2:	89 2b       	or	r24, r25
 5c4:	b1 f7       	brne	.-20     	; 0x5b2 <write_EEPROM+0x26>
 5c6:	8e e3       	ldi	r24, 0x3E	; 62
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	2a 81       	ldd	r18, Y+2	; 0x02
 5cc:	3b 81       	ldd	r19, Y+3	; 0x03
 5ce:	fc 01       	movw	r30, r24
 5d0:	31 83       	std	Z+1, r19	; 0x01
 5d2:	20 83       	st	Z, r18
 5d4:	8d e3       	ldi	r24, 0x3D	; 61
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	29 81       	ldd	r18, Y+1	; 0x01
 5da:	fc 01       	movw	r30, r24
 5dc:	20 83       	st	Z, r18
 5de:	e2 9a       	sbi	0x1c, 2	; 28
 5e0:	e1 9a       	sbi	0x1c, 1	; 28
 5e2:	00 00       	nop
 5e4:	0f 90       	pop	r0
 5e6:	0f 90       	pop	r0
 5e8:	0f 90       	pop	r0
 5ea:	df 91       	pop	r29
 5ec:	cf 91       	pop	r28
 5ee:	08 95       	ret

000005f0 <read_EEPROM>:
 5f0:	cf 93       	push	r28
 5f2:	df 93       	push	r29
 5f4:	00 d0       	rcall	.+0      	; 0x5f6 <read_EEPROM+0x6>
 5f6:	cd b7       	in	r28, 0x3d	; 61
 5f8:	de b7       	in	r29, 0x3e	; 62
 5fa:	9a 83       	std	Y+2, r25	; 0x02
 5fc:	89 83       	std	Y+1, r24	; 0x01
 5fe:	89 81       	ldd	r24, Y+1	; 0x01
 600:	9a 81       	ldd	r25, Y+2	; 0x02
 602:	81 30       	cpi	r24, 0x01	; 1
 604:	94 40       	sbci	r25, 0x04	; 4
 606:	10 f0       	brcs	.+4      	; 0x60c <read_EEPROM+0x1c>
 608:	80 e0       	ldi	r24, 0x00	; 0
 60a:	1f c0       	rjmp	.+62     	; 0x64a <read_EEPROM+0x5a>
 60c:	00 00       	nop
 60e:	8c e3       	ldi	r24, 0x3C	; 60
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	fc 01       	movw	r30, r24
 614:	80 81       	ld	r24, Z
 616:	88 2f       	mov	r24, r24
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	82 70       	andi	r24, 0x02	; 2
 61c:	99 27       	eor	r25, r25
 61e:	89 2b       	or	r24, r25
 620:	b1 f7       	brne	.-20     	; 0x60e <read_EEPROM+0x1e>
 622:	8e e3       	ldi	r24, 0x3E	; 62
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	29 81       	ldd	r18, Y+1	; 0x01
 628:	3a 81       	ldd	r19, Y+2	; 0x02
 62a:	fc 01       	movw	r30, r24
 62c:	31 83       	std	Z+1, r19	; 0x01
 62e:	20 83       	st	Z, r18
 630:	8c e3       	ldi	r24, 0x3C	; 60
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	2c e3       	ldi	r18, 0x3C	; 60
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	f9 01       	movw	r30, r18
 63a:	20 81       	ld	r18, Z
 63c:	21 60       	ori	r18, 0x01	; 1
 63e:	fc 01       	movw	r30, r24
 640:	20 83       	st	Z, r18
 642:	8d e3       	ldi	r24, 0x3D	; 61
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	fc 01       	movw	r30, r24
 648:	80 81       	ld	r24, Z
 64a:	0f 90       	pop	r0
 64c:	0f 90       	pop	r0
 64e:	df 91       	pop	r29
 650:	cf 91       	pop	r28
 652:	08 95       	ret

00000654 <storePasscode>:
 654:	cf 93       	push	r28
 656:	df 93       	push	r29
 658:	cd b7       	in	r28, 0x3d	; 61
 65a:	de b7       	in	r29, 0x3e	; 62
 65c:	63 97       	sbiw	r28, 0x13	; 19
 65e:	0f b6       	in	r0, 0x3f	; 63
 660:	f8 94       	cli
 662:	de bf       	out	0x3e, r29	; 62
 664:	0f be       	out	0x3f, r0	; 63
 666:	cd bf       	out	0x3d, r28	; 61
 668:	6f 87       	std	Y+15, r22	; 0x0f
 66a:	78 8b       	std	Y+16, r23	; 0x10
 66c:	89 8b       	std	Y+17, r24	; 0x11
 66e:	9a 8b       	std	Y+18, r25	; 0x12
 670:	4b 8b       	std	Y+19, r20	; 0x13
 672:	8b 89       	ldd	r24, Y+19	; 0x13
 674:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <isUser>
 678:	88 23       	and	r24, r24
 67a:	21 f4       	brne	.+8      	; 0x684 <storePasscode+0x30>
 67c:	82 e0       	ldi	r24, 0x02	; 2
 67e:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__data_end>
 682:	67 c0       	rjmp	.+206    	; 0x752 <storePasscode+0xfe>
 684:	1a 82       	std	Y+2, r1	; 0x02
 686:	19 82       	std	Y+1, r1	; 0x01
 688:	5e c0       	rjmp	.+188    	; 0x746 <storePasscode+0xf2>
 68a:	89 81       	ldd	r24, Y+1	; 0x01
 68c:	9a 81       	ldd	r25, Y+2	; 0x02
 68e:	9c 01       	movw	r18, r24
 690:	22 0f       	add	r18, r18
 692:	33 1f       	adc	r19, r19
 694:	22 0f       	add	r18, r18
 696:	33 1f       	adc	r19, r19
 698:	22 0f       	add	r18, r18
 69a:	33 1f       	adc	r19, r19
 69c:	8f 85       	ldd	r24, Y+15	; 0x0f
 69e:	98 89       	ldd	r25, Y+16	; 0x10
 6a0:	a9 89       	ldd	r26, Y+17	; 0x11
 6a2:	ba 89       	ldd	r27, Y+18	; 0x12
 6a4:	04 c0       	rjmp	.+8      	; 0x6ae <storePasscode+0x5a>
 6a6:	b6 95       	lsr	r27
 6a8:	a7 95       	ror	r26
 6aa:	97 95       	ror	r25
 6ac:	87 95       	ror	r24
 6ae:	2a 95       	dec	r18
 6b0:	d2 f7       	brpl	.-12     	; 0x6a6 <storePasscode+0x52>
 6b2:	48 2f       	mov	r20, r24
 6b4:	9e 01       	movw	r18, r28
 6b6:	2d 5f       	subi	r18, 0xFD	; 253
 6b8:	3f 4f       	sbci	r19, 0xFF	; 255
 6ba:	89 81       	ldd	r24, Y+1	; 0x01
 6bc:	9a 81       	ldd	r25, Y+2	; 0x02
 6be:	82 0f       	add	r24, r18
 6c0:	93 1f       	adc	r25, r19
 6c2:	fc 01       	movw	r30, r24
 6c4:	40 83       	st	Z, r20
 6c6:	8b 89       	ldd	r24, Y+19	; 0x13
 6c8:	88 2f       	mov	r24, r24
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	9c 01       	movw	r18, r24
 6ce:	22 95       	swap	r18
 6d0:	32 95       	swap	r19
 6d2:	30 7f       	andi	r19, 0xF0	; 240
 6d4:	32 27       	eor	r19, r18
 6d6:	20 7f       	andi	r18, 0xF0	; 240
 6d8:	32 27       	eor	r19, r18
 6da:	44 e0       	ldi	r20, 0x04	; 4
 6dc:	50 e0       	ldi	r21, 0x00	; 0
 6de:	89 81       	ldd	r24, Y+1	; 0x01
 6e0:	9a 81       	ldd	r25, Y+2	; 0x02
 6e2:	ba 01       	movw	r22, r20
 6e4:	68 1b       	sub	r22, r24
 6e6:	79 0b       	sbc	r23, r25
 6e8:	cb 01       	movw	r24, r22
 6ea:	82 2b       	or	r24, r18
 6ec:	93 2b       	or	r25, r19
 6ee:	ac 01       	movw	r20, r24
 6f0:	89 81       	ldd	r24, Y+1	; 0x01
 6f2:	9a 81       	ldd	r25, Y+2	; 0x02
 6f4:	88 0f       	add	r24, r24
 6f6:	99 1f       	adc	r25, r25
 6f8:	9e 01       	movw	r18, r28
 6fa:	2f 5f       	subi	r18, 0xFF	; 255
 6fc:	3f 4f       	sbci	r19, 0xFF	; 255
 6fe:	82 0f       	add	r24, r18
 700:	93 1f       	adc	r25, r19
 702:	06 96       	adiw	r24, 0x06	; 6
 704:	fc 01       	movw	r30, r24
 706:	51 83       	std	Z+1, r21	; 0x01
 708:	40 83       	st	Z, r20
 70a:	89 81       	ldd	r24, Y+1	; 0x01
 70c:	9a 81       	ldd	r25, Y+2	; 0x02
 70e:	88 0f       	add	r24, r24
 710:	99 1f       	adc	r25, r25
 712:	9e 01       	movw	r18, r28
 714:	2f 5f       	subi	r18, 0xFF	; 255
 716:	3f 4f       	sbci	r19, 0xFF	; 255
 718:	82 0f       	add	r24, r18
 71a:	93 1f       	adc	r25, r19
 71c:	06 96       	adiw	r24, 0x06	; 6
 71e:	fc 01       	movw	r30, r24
 720:	40 81       	ld	r20, Z
 722:	51 81       	ldd	r21, Z+1	; 0x01
 724:	9e 01       	movw	r18, r28
 726:	2d 5f       	subi	r18, 0xFD	; 253
 728:	3f 4f       	sbci	r19, 0xFF	; 255
 72a:	89 81       	ldd	r24, Y+1	; 0x01
 72c:	9a 81       	ldd	r25, Y+2	; 0x02
 72e:	82 0f       	add	r24, r18
 730:	93 1f       	adc	r25, r19
 732:	fc 01       	movw	r30, r24
 734:	80 81       	ld	r24, Z
 736:	ba 01       	movw	r22, r20
 738:	0e 94 c6 02 	call	0x58c	; 0x58c <write_EEPROM>
 73c:	89 81       	ldd	r24, Y+1	; 0x01
 73e:	9a 81       	ldd	r25, Y+2	; 0x02
 740:	01 96       	adiw	r24, 0x01	; 1
 742:	9a 83       	std	Y+2, r25	; 0x02
 744:	89 83       	std	Y+1, r24	; 0x01
 746:	89 81       	ldd	r24, Y+1	; 0x01
 748:	9a 81       	ldd	r25, Y+2	; 0x02
 74a:	04 97       	sbiw	r24, 0x04	; 4
 74c:	0c f4       	brge	.+2      	; 0x750 <storePasscode+0xfc>
 74e:	9d cf       	rjmp	.-198    	; 0x68a <storePasscode+0x36>
 750:	00 00       	nop
 752:	63 96       	adiw	r28, 0x13	; 19
 754:	0f b6       	in	r0, 0x3f	; 63
 756:	f8 94       	cli
 758:	de bf       	out	0x3e, r29	; 62
 75a:	0f be       	out	0x3f, r0	; 63
 75c:	cd bf       	out	0x3d, r28	; 61
 75e:	df 91       	pop	r29
 760:	cf 91       	pop	r28
 762:	08 95       	ret

00000764 <RecallPasscode>:
 764:	cf 93       	push	r28
 766:	df 93       	push	r29
 768:	cd b7       	in	r28, 0x3d	; 61
 76a:	de b7       	in	r29, 0x3e	; 62
 76c:	2b 97       	sbiw	r28, 0x0b	; 11
 76e:	0f b6       	in	r0, 0x3f	; 63
 770:	f8 94       	cli
 772:	de bf       	out	0x3e, r29	; 62
 774:	0f be       	out	0x3f, r0	; 63
 776:	cd bf       	out	0x3d, r28	; 61
 778:	8b 87       	std	Y+11, r24	; 0x0b
 77a:	1f 82       	std	Y+7, r1	; 0x07
 77c:	18 86       	std	Y+8, r1	; 0x08
 77e:	19 86       	std	Y+9, r1	; 0x09
 780:	1a 86       	std	Y+10, r1	; 0x0a
 782:	19 82       	std	Y+1, r1	; 0x01
 784:	1a 82       	std	Y+2, r1	; 0x02
 786:	1b 82       	std	Y+3, r1	; 0x03
 788:	1c 82       	std	Y+4, r1	; 0x04
 78a:	1e 82       	std	Y+6, r1	; 0x06
 78c:	1d 82       	std	Y+5, r1	; 0x05
 78e:	43 c0       	rjmp	.+134    	; 0x816 <RecallPasscode+0xb2>
 790:	8b 85       	ldd	r24, Y+11	; 0x0b
 792:	88 2f       	mov	r24, r24
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	9c 01       	movw	r18, r24
 798:	22 95       	swap	r18
 79a:	32 95       	swap	r19
 79c:	30 7f       	andi	r19, 0xF0	; 240
 79e:	32 27       	eor	r19, r18
 7a0:	20 7f       	andi	r18, 0xF0	; 240
 7a2:	32 27       	eor	r19, r18
 7a4:	44 e0       	ldi	r20, 0x04	; 4
 7a6:	50 e0       	ldi	r21, 0x00	; 0
 7a8:	8d 81       	ldd	r24, Y+5	; 0x05
 7aa:	9e 81       	ldd	r25, Y+6	; 0x06
 7ac:	ba 01       	movw	r22, r20
 7ae:	68 1b       	sub	r22, r24
 7b0:	79 0b       	sbc	r23, r25
 7b2:	cb 01       	movw	r24, r22
 7b4:	82 2b       	or	r24, r18
 7b6:	93 2b       	or	r25, r19
 7b8:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <read_EEPROM>
 7bc:	88 2f       	mov	r24, r24
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	a0 e0       	ldi	r26, 0x00	; 0
 7c2:	b0 e0       	ldi	r27, 0x00	; 0
 7c4:	8f 83       	std	Y+7, r24	; 0x07
 7c6:	98 87       	std	Y+8, r25	; 0x08
 7c8:	a9 87       	std	Y+9, r26	; 0x09
 7ca:	ba 87       	std	Y+10, r27	; 0x0a
 7cc:	8d 81       	ldd	r24, Y+5	; 0x05
 7ce:	9e 81       	ldd	r25, Y+6	; 0x06
 7d0:	9c 01       	movw	r18, r24
 7d2:	22 0f       	add	r18, r18
 7d4:	33 1f       	adc	r19, r19
 7d6:	22 0f       	add	r18, r18
 7d8:	33 1f       	adc	r19, r19
 7da:	22 0f       	add	r18, r18
 7dc:	33 1f       	adc	r19, r19
 7de:	8f 81       	ldd	r24, Y+7	; 0x07
 7e0:	98 85       	ldd	r25, Y+8	; 0x08
 7e2:	a9 85       	ldd	r26, Y+9	; 0x09
 7e4:	ba 85       	ldd	r27, Y+10	; 0x0a
 7e6:	04 c0       	rjmp	.+8      	; 0x7f0 <RecallPasscode+0x8c>
 7e8:	88 0f       	add	r24, r24
 7ea:	99 1f       	adc	r25, r25
 7ec:	aa 1f       	adc	r26, r26
 7ee:	bb 1f       	adc	r27, r27
 7f0:	2a 95       	dec	r18
 7f2:	d2 f7       	brpl	.-12     	; 0x7e8 <RecallPasscode+0x84>
 7f4:	29 81       	ldd	r18, Y+1	; 0x01
 7f6:	3a 81       	ldd	r19, Y+2	; 0x02
 7f8:	4b 81       	ldd	r20, Y+3	; 0x03
 7fa:	5c 81       	ldd	r21, Y+4	; 0x04
 7fc:	82 2b       	or	r24, r18
 7fe:	93 2b       	or	r25, r19
 800:	a4 2b       	or	r26, r20
 802:	b5 2b       	or	r27, r21
 804:	89 83       	std	Y+1, r24	; 0x01
 806:	9a 83       	std	Y+2, r25	; 0x02
 808:	ab 83       	std	Y+3, r26	; 0x03
 80a:	bc 83       	std	Y+4, r27	; 0x04
 80c:	8d 81       	ldd	r24, Y+5	; 0x05
 80e:	9e 81       	ldd	r25, Y+6	; 0x06
 810:	01 96       	adiw	r24, 0x01	; 1
 812:	9e 83       	std	Y+6, r25	; 0x06
 814:	8d 83       	std	Y+5, r24	; 0x05
 816:	8d 81       	ldd	r24, Y+5	; 0x05
 818:	9e 81       	ldd	r25, Y+6	; 0x06
 81a:	04 97       	sbiw	r24, 0x04	; 4
 81c:	0c f4       	brge	.+2      	; 0x820 <RecallPasscode+0xbc>
 81e:	b8 cf       	rjmp	.-144    	; 0x790 <RecallPasscode+0x2c>
 820:	89 81       	ldd	r24, Y+1	; 0x01
 822:	9a 81       	ldd	r25, Y+2	; 0x02
 824:	ab 81       	ldd	r26, Y+3	; 0x03
 826:	bc 81       	ldd	r27, Y+4	; 0x04
 828:	bc 01       	movw	r22, r24
 82a:	cd 01       	movw	r24, r26
 82c:	2b 96       	adiw	r28, 0x0b	; 11
 82e:	0f b6       	in	r0, 0x3f	; 63
 830:	f8 94       	cli
 832:	de bf       	out	0x3e, r29	; 62
 834:	0f be       	out	0x3f, r0	; 63
 836:	cd bf       	out	0x3d, r28	; 61
 838:	df 91       	pop	r29
 83a:	cf 91       	pop	r28
 83c:	08 95       	ret

0000083e <initLEDs>:
 83e:	cf 93       	push	r28
 840:	df 93       	push	r29
 842:	cd b7       	in	r28, 0x3d	; 61
 844:	de b7       	in	r29, 0x3e	; 62
 846:	87 e3       	ldi	r24, 0x37	; 55
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	2f ef       	ldi	r18, 0xFF	; 255
 84c:	fc 01       	movw	r30, r24
 84e:	20 83       	st	Z, r18
 850:	88 e3       	ldi	r24, 0x38	; 56
 852:	90 e0       	ldi	r25, 0x00	; 0
 854:	fc 01       	movw	r30, r24
 856:	10 82       	st	Z, r1
 858:	00 00       	nop
 85a:	df 91       	pop	r29
 85c:	cf 91       	pop	r28
 85e:	08 95       	ret

00000860 <initKeypad>:
 860:	cf 93       	push	r28
 862:	df 93       	push	r29
 864:	cd b7       	in	r28, 0x3d	; 61
 866:	de b7       	in	r29, 0x3e	; 62
 868:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <keypad3x4>
 86c:	81 30       	cpi	r24, 0x01	; 1
 86e:	99 f4       	brne	.+38     	; 0x896 <initKeypad+0x36>
 870:	84 e3       	ldi	r24, 0x34	; 52
 872:	90 e0       	ldi	r25, 0x00	; 0
 874:	25 e9       	ldi	r18, 0x95	; 149
 876:	fc 01       	movw	r30, r24
 878:	20 83       	st	Z, r18
 87a:	85 e3       	ldi	r24, 0x35	; 53
 87c:	90 e0       	ldi	r25, 0x00	; 0
 87e:	2a e6       	ldi	r18, 0x6A	; 106
 880:	fc 01       	movw	r30, r24
 882:	20 83       	st	Z, r18
 884:	85 e3       	ldi	r24, 0x35	; 53
 886:	90 e0       	ldi	r25, 0x00	; 0
 888:	2f ef       	ldi	r18, 0xFF	; 255
 88a:	fc 01       	movw	r30, r24
 88c:	20 83       	st	Z, r18
 88e:	83 e0       	ldi	r24, 0x03	; 3
 890:	80 93 79 00 	sts	0x0079, r24	; 0x800079 <AmountOfColumns>
 894:	12 c0       	rjmp	.+36     	; 0x8ba <initKeypad+0x5a>
 896:	84 e3       	ldi	r24, 0x34	; 52
 898:	90 e0       	ldi	r25, 0x00	; 0
 89a:	20 ef       	ldi	r18, 0xF0	; 240
 89c:	fc 01       	movw	r30, r24
 89e:	20 83       	st	Z, r18
 8a0:	85 e3       	ldi	r24, 0x35	; 53
 8a2:	90 e0       	ldi	r25, 0x00	; 0
 8a4:	2f e0       	ldi	r18, 0x0F	; 15
 8a6:	fc 01       	movw	r30, r24
 8a8:	20 83       	st	Z, r18
 8aa:	85 e3       	ldi	r24, 0x35	; 53
 8ac:	90 e0       	ldi	r25, 0x00	; 0
 8ae:	2f ef       	ldi	r18, 0xFF	; 255
 8b0:	fc 01       	movw	r30, r24
 8b2:	20 83       	st	Z, r18
 8b4:	84 e0       	ldi	r24, 0x04	; 4
 8b6:	80 93 79 00 	sts	0x0079, r24	; 0x800079 <AmountOfColumns>
 8ba:	00 00       	nop
 8bc:	df 91       	pop	r29
 8be:	cf 91       	pop	r28
 8c0:	08 95       	ret

000008c2 <initTimers>:
 8c2:	cf 93       	push	r28
 8c4:	df 93       	push	r29
 8c6:	cd b7       	in	r28, 0x3d	; 61
 8c8:	de b7       	in	r29, 0x3e	; 62
 8ca:	82 e5       	ldi	r24, 0x52	; 82
 8cc:	90 e0       	ldi	r25, 0x00	; 0
 8ce:	fc 01       	movw	r30, r24
 8d0:	10 82       	st	Z, r1
 8d2:	83 e5       	ldi	r24, 0x53	; 83
 8d4:	90 e0       	ldi	r25, 0x00	; 0
 8d6:	23 e5       	ldi	r18, 0x53	; 83
 8d8:	30 e0       	ldi	r19, 0x00	; 0
 8da:	f9 01       	movw	r30, r18
 8dc:	20 81       	ld	r18, Z
 8de:	25 60       	ori	r18, 0x05	; 5
 8e0:	fc 01       	movw	r30, r24
 8e2:	20 83       	st	Z, r18
 8e4:	8c e4       	ldi	r24, 0x4C	; 76
 8e6:	90 e0       	ldi	r25, 0x00	; 0
 8e8:	fc 01       	movw	r30, r24
 8ea:	11 82       	std	Z+1, r1	; 0x01
 8ec:	10 82       	st	Z, r1
 8ee:	8e e4       	ldi	r24, 0x4E	; 78
 8f0:	90 e0       	ldi	r25, 0x00	; 0
 8f2:	2e e4       	ldi	r18, 0x4E	; 78
 8f4:	30 e0       	ldi	r19, 0x00	; 0
 8f6:	f9 01       	movw	r30, r18
 8f8:	20 81       	ld	r18, Z
 8fa:	25 60       	ori	r18, 0x05	; 5
 8fc:	fc 01       	movw	r30, r24
 8fe:	20 83       	st	Z, r18
 900:	00 00       	nop
 902:	df 91       	pop	r29
 904:	cf 91       	pop	r28
 906:	08 95       	ret

00000908 <ReadOne>:
 908:	cf 93       	push	r28
 90a:	df 93       	push	r29
 90c:	00 d0       	rcall	.+0      	; 0x90e <ReadOne+0x6>
 90e:	cd b7       	in	r28, 0x3d	; 61
 910:	de b7       	in	r29, 0x3e	; 62
 912:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <KeyPressed>
 916:	19 82       	std	Y+1, r1	; 0x01
 918:	3f c0       	rjmp	.+126    	; 0x998 <ReadOne+0x90>
 91a:	85 e3       	ldi	r24, 0x35	; 53
 91c:	90 e0       	ldi	r25, 0x00	; 0
 91e:	29 81       	ldd	r18, Y+1	; 0x01
 920:	22 2f       	mov	r18, r18
 922:	30 e0       	ldi	r19, 0x00	; 0
 924:	2e 59       	subi	r18, 0x9E	; 158
 926:	3f 4f       	sbci	r19, 0xFF	; 255
 928:	f9 01       	movw	r30, r18
 92a:	20 81       	ld	r18, Z
 92c:	fc 01       	movw	r30, r24
 92e:	20 83       	st	Z, r18
 930:	8a e0       	ldi	r24, 0x0A	; 10
 932:	90 e0       	ldi	r25, 0x00	; 0
 934:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 938:	83 e3       	ldi	r24, 0x33	; 51
 93a:	90 e0       	ldi	r25, 0x00	; 0
 93c:	fc 01       	movw	r30, r24
 93e:	80 81       	ld	r24, Z
 940:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <portCValue>
 944:	89 81       	ldd	r24, Y+1	; 0x01
 946:	88 2f       	mov	r24, r24
 948:	90 e0       	ldi	r25, 0x00	; 0
 94a:	8e 59       	subi	r24, 0x9E	; 158
 94c:	9f 4f       	sbci	r25, 0xFF	; 255
 94e:	fc 01       	movw	r30, r24
 950:	90 81       	ld	r25, Z
 952:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <portCValue>
 956:	98 17       	cp	r25, r24
 958:	e1 f0       	breq	.+56     	; 0x992 <ReadOne+0x8a>
 95a:	1a 82       	std	Y+2, r1	; 0x02
 95c:	17 c0       	rjmp	.+46     	; 0x98c <ReadOne+0x84>
 95e:	8a 81       	ldd	r24, Y+2	; 0x02
 960:	88 2f       	mov	r24, r24
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	8a 59       	subi	r24, 0x9A	; 154
 966:	9f 4f       	sbci	r25, 0xFF	; 255
 968:	fc 01       	movw	r30, r24
 96a:	90 81       	ld	r25, Z
 96c:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <portCValue>
 970:	98 17       	cp	r25, r24
 972:	49 f4       	brne	.+18     	; 0x986 <ReadOne+0x7e>
 974:	8a 81       	ldd	r24, Y+2	; 0x02
 976:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 97a:	81 e0       	ldi	r24, 0x01	; 1
 97c:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <KeyPressed>
 980:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 984:	10 c0       	rjmp	.+32     	; 0x9a6 <ReadOne+0x9e>
 986:	8a 81       	ldd	r24, Y+2	; 0x02
 988:	8f 5f       	subi	r24, 0xFF	; 255
 98a:	8a 83       	std	Y+2, r24	; 0x02
 98c:	8a 81       	ldd	r24, Y+2	; 0x02
 98e:	80 31       	cpi	r24, 0x10	; 16
 990:	30 f3       	brcs	.-52     	; 0x95e <ReadOne+0x56>
 992:	89 81       	ldd	r24, Y+1	; 0x01
 994:	8f 5f       	subi	r24, 0xFF	; 255
 996:	89 83       	std	Y+1, r24	; 0x01
 998:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <AmountOfColumns>
 99c:	99 81       	ldd	r25, Y+1	; 0x01
 99e:	98 17       	cp	r25, r24
 9a0:	08 f4       	brcc	.+2      	; 0x9a4 <ReadOne+0x9c>
 9a2:	bb cf       	rjmp	.-138    	; 0x91a <ReadOne+0x12>
 9a4:	b8 cf       	rjmp	.-144    	; 0x916 <ReadOne+0xe>
 9a6:	0f 90       	pop	r0
 9a8:	0f 90       	pop	r0
 9aa:	df 91       	pop	r29
 9ac:	cf 91       	pop	r28
 9ae:	08 95       	ret

000009b0 <ReadNone>:
 9b0:	cf 93       	push	r28
 9b2:	df 93       	push	r29
 9b4:	cd b7       	in	r28, 0x3d	; 61
 9b6:	de b7       	in	r29, 0x3e	; 62
 9b8:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <keypad3x4>
 9bc:	81 30       	cpi	r24, 0x01	; 1
 9be:	69 f4       	brne	.+26     	; 0x9da <ReadNone+0x2a>
 9c0:	00 00       	nop
 9c2:	83 e3       	ldi	r24, 0x33	; 51
 9c4:	90 e0       	ldi	r25, 0x00	; 0
 9c6:	fc 01       	movw	r30, r24
 9c8:	80 81       	ld	r24, Z
 9ca:	88 2f       	mov	r24, r24
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	8a 76       	andi	r24, 0x6A	; 106
 9d0:	99 27       	eor	r25, r25
 9d2:	8a 36       	cpi	r24, 0x6A	; 106
 9d4:	91 05       	cpc	r25, r1
 9d6:	a9 f7       	brne	.-22     	; 0x9c2 <ReadNone+0x12>
 9d8:	0b c0       	rjmp	.+22     	; 0x9f0 <ReadNone+0x40>
 9da:	00 00       	nop
 9dc:	83 e3       	ldi	r24, 0x33	; 51
 9de:	90 e0       	ldi	r25, 0x00	; 0
 9e0:	fc 01       	movw	r30, r24
 9e2:	80 81       	ld	r24, Z
 9e4:	88 2f       	mov	r24, r24
 9e6:	90 e0       	ldi	r25, 0x00	; 0
 9e8:	8f 70       	andi	r24, 0x0F	; 15
 9ea:	99 27       	eor	r25, r25
 9ec:	0f 97       	sbiw	r24, 0x0f	; 15
 9ee:	b1 f7       	brne	.-20     	; 0x9dc <ReadNone+0x2c>
 9f0:	00 00       	nop
 9f2:	df 91       	pop	r29
 9f4:	cf 91       	pop	r28
 9f6:	08 95       	ret

000009f8 <InputPasscode>:
 9f8:	0f 93       	push	r16
 9fa:	1f 93       	push	r17
 9fc:	cf 93       	push	r28
 9fe:	df 93       	push	r29
 a00:	cd b7       	in	r28, 0x3d	; 61
 a02:	de b7       	in	r29, 0x3e	; 62
 a04:	27 97       	sbiw	r28, 0x07	; 7
 a06:	0f b6       	in	r0, 0x3f	; 63
 a08:	f8 94       	cli
 a0a:	de bf       	out	0x3e, r29	; 62
 a0c:	0f be       	out	0x3f, r0	; 63
 a0e:	cd bf       	out	0x3d, r28	; 61
 a10:	19 82       	std	Y+1, r1	; 0x01
 a12:	1a 82       	std	Y+2, r1	; 0x02
 a14:	1b 82       	std	Y+3, r1	; 0x03
 a16:	1c 82       	std	Y+4, r1	; 0x04
 a18:	1e 82       	std	Y+6, r1	; 0x06
 a1a:	1d 82       	std	Y+5, r1	; 0x05
 a1c:	4d c0       	rjmp	.+154    	; 0xab8 <InputPasscode+0xc0>
 a1e:	0e 94 84 04 	call	0x908	; 0x908 <ReadOne>
 a22:	8f 83       	std	Y+7, r24	; 0x07
 a24:	8f 81       	ldd	r24, Y+7	; 0x07
 a26:	8f 30       	cpi	r24, 0x0F	; 15
 a28:	29 f4       	brne	.+10     	; 0xa34 <InputPasscode+0x3c>
 a2a:	89 81       	ldd	r24, Y+1	; 0x01
 a2c:	9a 81       	ldd	r25, Y+2	; 0x02
 a2e:	ab 81       	ldd	r26, Y+3	; 0x03
 a30:	bc 81       	ldd	r27, Y+4	; 0x04
 a32:	53 c0       	rjmp	.+166    	; 0xada <InputPasscode+0xe2>
 a34:	8f 81       	ldd	r24, Y+7	; 0x07
 a36:	0e 94 8d 05 	call	0xb1a	; 0xb1a <isDigit>
 a3a:	88 23       	and	r24, r24
 a3c:	89 f1       	breq	.+98     	; 0xaa0 <InputPasscode+0xa8>
 a3e:	08 e3       	ldi	r16, 0x38	; 56
 a40:	10 e0       	ldi	r17, 0x00	; 0
 a42:	8f 81       	ldd	r24, Y+7	; 0x07
 a44:	0e 94 3f 02 	call	0x47e	; 0x47e <displayKeys>
 a48:	f8 01       	movw	r30, r16
 a4a:	80 83       	st	Z, r24
 a4c:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <ReadNone>
 a50:	88 e3       	ldi	r24, 0x38	; 56
 a52:	90 e0       	ldi	r25, 0x00	; 0
 a54:	fc 01       	movw	r30, r24
 a56:	10 82       	st	Z, r1
 a58:	89 81       	ldd	r24, Y+1	; 0x01
 a5a:	9a 81       	ldd	r25, Y+2	; 0x02
 a5c:	ab 81       	ldd	r26, Y+3	; 0x03
 a5e:	bc 81       	ldd	r27, Y+4	; 0x04
 a60:	88 0f       	add	r24, r24
 a62:	99 1f       	adc	r25, r25
 a64:	aa 1f       	adc	r26, r26
 a66:	bb 1f       	adc	r27, r27
 a68:	9c 01       	movw	r18, r24
 a6a:	ad 01       	movw	r20, r26
 a6c:	22 0f       	add	r18, r18
 a6e:	33 1f       	adc	r19, r19
 a70:	44 1f       	adc	r20, r20
 a72:	55 1f       	adc	r21, r21
 a74:	22 0f       	add	r18, r18
 a76:	33 1f       	adc	r19, r19
 a78:	44 1f       	adc	r20, r20
 a7a:	55 1f       	adc	r21, r21
 a7c:	28 0f       	add	r18, r24
 a7e:	39 1f       	adc	r19, r25
 a80:	4a 1f       	adc	r20, r26
 a82:	5b 1f       	adc	r21, r27
 a84:	8f 81       	ldd	r24, Y+7	; 0x07
 a86:	88 2f       	mov	r24, r24
 a88:	90 e0       	ldi	r25, 0x00	; 0
 a8a:	a0 e0       	ldi	r26, 0x00	; 0
 a8c:	b0 e0       	ldi	r27, 0x00	; 0
 a8e:	82 0f       	add	r24, r18
 a90:	93 1f       	adc	r25, r19
 a92:	a4 1f       	adc	r26, r20
 a94:	b5 1f       	adc	r27, r21
 a96:	89 83       	std	Y+1, r24	; 0x01
 a98:	9a 83       	std	Y+2, r25	; 0x02
 a9a:	ab 83       	std	Y+3, r26	; 0x03
 a9c:	bc 83       	std	Y+4, r27	; 0x04
 a9e:	07 c0       	rjmp	.+14     	; 0xaae <InputPasscode+0xb6>
 aa0:	8d 81       	ldd	r24, Y+5	; 0x05
 aa2:	9e 81       	ldd	r25, Y+6	; 0x06
 aa4:	01 97       	sbiw	r24, 0x01	; 1
 aa6:	9e 83       	std	Y+6, r25	; 0x06
 aa8:	8d 83       	std	Y+5, r24	; 0x05
 aaa:	0e 94 17 02 	call	0x42e	; 0x42e <displayIncorrect>
 aae:	8d 81       	ldd	r24, Y+5	; 0x05
 ab0:	9e 81       	ldd	r25, Y+6	; 0x06
 ab2:	01 96       	adiw	r24, 0x01	; 1
 ab4:	9e 83       	std	Y+6, r25	; 0x06
 ab6:	8d 83       	std	Y+5, r24	; 0x05
 ab8:	8d 81       	ldd	r24, Y+5	; 0x05
 aba:	9e 81       	ldd	r25, Y+6	; 0x06
 abc:	08 97       	sbiw	r24, 0x08	; 8
 abe:	0c f4       	brge	.+2      	; 0xac2 <InputPasscode+0xca>
 ac0:	ae cf       	rjmp	.-164    	; 0xa1e <InputPasscode+0x26>
 ac2:	0e 94 84 04 	call	0x908	; 0x908 <ReadOne>
 ac6:	8f 30       	cpi	r24, 0x0F	; 15
 ac8:	29 f4       	brne	.+10     	; 0xad4 <InputPasscode+0xdc>
 aca:	89 81       	ldd	r24, Y+1	; 0x01
 acc:	9a 81       	ldd	r25, Y+2	; 0x02
 ace:	ab 81       	ldd	r26, Y+3	; 0x03
 ad0:	bc 81       	ldd	r27, Y+4	; 0x04
 ad2:	03 c0       	rjmp	.+6      	; 0xada <InputPasscode+0xe2>
 ad4:	80 e0       	ldi	r24, 0x00	; 0
 ad6:	90 e0       	ldi	r25, 0x00	; 0
 ad8:	dc 01       	movw	r26, r24
 ada:	bc 01       	movw	r22, r24
 adc:	cd 01       	movw	r24, r26
 ade:	27 96       	adiw	r28, 0x07	; 7
 ae0:	0f b6       	in	r0, 0x3f	; 63
 ae2:	f8 94       	cli
 ae4:	de bf       	out	0x3e, r29	; 62
 ae6:	0f be       	out	0x3f, r0	; 63
 ae8:	cd bf       	out	0x3d, r28	; 61
 aea:	df 91       	pop	r29
 aec:	cf 91       	pop	r28
 aee:	1f 91       	pop	r17
 af0:	0f 91       	pop	r16
 af2:	08 95       	ret

00000af4 <isUser>:
 af4:	cf 93       	push	r28
 af6:	df 93       	push	r29
 af8:	1f 92       	push	r1
 afa:	cd b7       	in	r28, 0x3d	; 61
 afc:	de b7       	in	r29, 0x3e	; 62
 afe:	89 83       	std	Y+1, r24	; 0x01
 b00:	89 81       	ldd	r24, Y+1	; 0x01
 b02:	88 2f       	mov	r24, r24
 b04:	90 e0       	ldi	r25, 0x00	; 0
 b06:	0a 97       	sbiw	r24, 0x0a	; 10
 b08:	04 97       	sbiw	r24, 0x04	; 4
 b0a:	10 f4       	brcc	.+4      	; 0xb10 <isUser+0x1c>
 b0c:	81 e0       	ldi	r24, 0x01	; 1
 b0e:	01 c0       	rjmp	.+2      	; 0xb12 <isUser+0x1e>
 b10:	80 e0       	ldi	r24, 0x00	; 0
 b12:	0f 90       	pop	r0
 b14:	df 91       	pop	r29
 b16:	cf 91       	pop	r28
 b18:	08 95       	ret

00000b1a <isDigit>:
 b1a:	cf 93       	push	r28
 b1c:	df 93       	push	r29
 b1e:	1f 92       	push	r1
 b20:	cd b7       	in	r28, 0x3d	; 61
 b22:	de b7       	in	r29, 0x3e	; 62
 b24:	89 83       	std	Y+1, r24	; 0x01
 b26:	89 81       	ldd	r24, Y+1	; 0x01
 b28:	88 2f       	mov	r24, r24
 b2a:	90 e0       	ldi	r25, 0x00	; 0
 b2c:	0a 97       	sbiw	r24, 0x0a	; 10
 b2e:	10 f4       	brcc	.+4      	; 0xb34 <isDigit+0x1a>
 b30:	81 e0       	ldi	r24, 0x01	; 1
 b32:	01 c0       	rjmp	.+2      	; 0xb36 <isDigit+0x1c>
 b34:	80 e0       	ldi	r24, 0x00	; 0
 b36:	0f 90       	pop	r0
 b38:	df 91       	pop	r29
 b3a:	cf 91       	pop	r28
 b3c:	08 95       	ret

00000b3e <isHeld3s>:
 b3e:	cf 93       	push	r28
 b40:	df 93       	push	r29
 b42:	1f 92       	push	r1
 b44:	cd b7       	in	r28, 0x3d	; 61
 b46:	de b7       	in	r29, 0x3e	; 62
 b48:	19 82       	std	Y+1, r1	; 0x01
 b4a:	13 c0       	rjmp	.+38     	; 0xb72 <isHeld3s+0x34>
 b4c:	8c e0       	ldi	r24, 0x0C	; 12
 b4e:	90 e0       	ldi	r25, 0x00	; 0
 b50:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 b54:	83 e3       	ldi	r24, 0x33	; 51
 b56:	90 e0       	ldi	r25, 0x00	; 0
 b58:	fc 01       	movw	r30, r24
 b5a:	80 81       	ld	r24, Z
 b5c:	88 2f       	mov	r24, r24
 b5e:	90 e0       	ldi	r25, 0x00	; 0
 b60:	8f 70       	andi	r24, 0x0F	; 15
 b62:	99 27       	eor	r25, r25
 b64:	0f 97       	sbiw	r24, 0x0f	; 15
 b66:	11 f4       	brne	.+4      	; 0xb6c <isHeld3s+0x2e>
 b68:	80 e0       	ldi	r24, 0x00	; 0
 b6a:	07 c0       	rjmp	.+14     	; 0xb7a <isHeld3s+0x3c>
 b6c:	89 81       	ldd	r24, Y+1	; 0x01
 b6e:	8f 5f       	subi	r24, 0xFF	; 255
 b70:	89 83       	std	Y+1, r24	; 0x01
 b72:	89 81       	ldd	r24, Y+1	; 0x01
 b74:	8f 3f       	cpi	r24, 0xFF	; 255
 b76:	51 f7       	brne	.-44     	; 0xb4c <isHeld3s+0xe>
 b78:	81 e0       	ldi	r24, 0x01	; 1
 b7a:	0f 90       	pop	r0
 b7c:	df 91       	pop	r29
 b7e:	cf 91       	pop	r28
 b80:	08 95       	ret

00000b82 <DigitCount>:
 b82:	cf 93       	push	r28
 b84:	df 93       	push	r29
 b86:	00 d0       	rcall	.+0      	; 0xb88 <DigitCount+0x6>
 b88:	00 d0       	rcall	.+0      	; 0xb8a <DigitCount+0x8>
 b8a:	1f 92       	push	r1
 b8c:	cd b7       	in	r28, 0x3d	; 61
 b8e:	de b7       	in	r29, 0x3e	; 62
 b90:	6a 83       	std	Y+2, r22	; 0x02
 b92:	7b 83       	std	Y+3, r23	; 0x03
 b94:	8c 83       	std	Y+4, r24	; 0x04
 b96:	9d 83       	std	Y+5, r25	; 0x05
 b98:	19 82       	std	Y+1, r1	; 0x01
 b9a:	15 c0       	rjmp	.+42     	; 0xbc6 <DigitCount+0x44>
 b9c:	8a 81       	ldd	r24, Y+2	; 0x02
 b9e:	9b 81       	ldd	r25, Y+3	; 0x03
 ba0:	ac 81       	ldd	r26, Y+4	; 0x04
 ba2:	bd 81       	ldd	r27, Y+5	; 0x05
 ba4:	2a e0       	ldi	r18, 0x0A	; 10
 ba6:	30 e0       	ldi	r19, 0x00	; 0
 ba8:	40 e0       	ldi	r20, 0x00	; 0
 baa:	50 e0       	ldi	r21, 0x00	; 0
 bac:	bc 01       	movw	r22, r24
 bae:	cd 01       	movw	r24, r26
 bb0:	0e 94 1b 07 	call	0xe36	; 0xe36 <__udivmodsi4>
 bb4:	da 01       	movw	r26, r20
 bb6:	c9 01       	movw	r24, r18
 bb8:	8a 83       	std	Y+2, r24	; 0x02
 bba:	9b 83       	std	Y+3, r25	; 0x03
 bbc:	ac 83       	std	Y+4, r26	; 0x04
 bbe:	bd 83       	std	Y+5, r27	; 0x05
 bc0:	89 81       	ldd	r24, Y+1	; 0x01
 bc2:	8f 5f       	subi	r24, 0xFF	; 255
 bc4:	89 83       	std	Y+1, r24	; 0x01
 bc6:	8a 81       	ldd	r24, Y+2	; 0x02
 bc8:	9b 81       	ldd	r25, Y+3	; 0x03
 bca:	ac 81       	ldd	r26, Y+4	; 0x04
 bcc:	bd 81       	ldd	r27, Y+5	; 0x05
 bce:	89 2b       	or	r24, r25
 bd0:	8a 2b       	or	r24, r26
 bd2:	8b 2b       	or	r24, r27
 bd4:	19 f7       	brne	.-58     	; 0xb9c <DigitCount+0x1a>
 bd6:	89 81       	ldd	r24, Y+1	; 0x01
 bd8:	0f 90       	pop	r0
 bda:	0f 90       	pop	r0
 bdc:	0f 90       	pop	r0
 bde:	0f 90       	pop	r0
 be0:	0f 90       	pop	r0
 be2:	df 91       	pop	r29
 be4:	cf 91       	pop	r28
 be6:	08 95       	ret

00000be8 <main>:

// Global variables
uint8_t debugCode = 0;

int main(void)
{
 be8:	cf 93       	push	r28
 bea:	df 93       	push	r29
 bec:	cd b7       	in	r28, 0x3d	; 61
 bee:	de b7       	in	r29, 0x3e	; 62
 bf0:	27 97       	sbiw	r28, 0x07	; 7
 bf2:	0f b6       	in	r0, 0x3f	; 63
 bf4:	f8 94       	cli
 bf6:	de bf       	out	0x3e, r29	; 62
 bf8:	0f be       	out	0x3f, r0	; 63
 bfa:	cd bf       	out	0x3d, r28	; 61
	// Initialise everything
    initTimers();
 bfc:	0e 94 61 04 	call	0x8c2	; 0x8c2 <initTimers>
	initLEDs();
 c00:	0e 94 1f 04 	call	0x83e	; 0x83e <initLEDs>
	initKeypad();
 c04:	0e 94 30 04 	call	0x860	; 0x860 <initKeypad>
		storePasscode(00000000, 0xA+i);		//stores the password 00000000 into user slot if no previous code has been set
	}
	*/
	

	uint8_t attempts = 0;		// Set number of attempts to 0
 c08:	19 82       	std	Y+1, r1	; 0x01
	uint8_t previousUser = 0;	//store what the previous user was
 c0a:	1a 82       	std	Y+2, r1	; 0x02

	// Start infinite loop
    while (1) 
    {
		uint8_t user = ReadOne();		//CHANGED added instead of For loop, determines the first key pressed
 c0c:	0e 94 84 04 	call	0x908	; 0x908 <ReadOne>
 c10:	8b 83       	std	Y+3, r24	; 0x03
		uint32_t attemptPasscode;
		
		if (previousUser != user)
 c12:	9a 81       	ldd	r25, Y+2	; 0x02
 c14:	8b 81       	ldd	r24, Y+3	; 0x03
 c16:	98 17       	cp	r25, r24
 c18:	09 f0       	breq	.+2      	; 0xc1c <main+0x34>
		{
			attempts = 0;
 c1a:	19 82       	std	Y+1, r1	; 0x01
		}
		
		
		if (isUser(user))	// Check if user A B C or D is chosen
 c1c:	8b 81       	ldd	r24, Y+3	; 0x03
 c1e:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <isUser>
 c22:	88 23       	and	r24, r24
 c24:	09 f4       	brne	.+2      	; 0xc28 <main+0x40>
 c26:	43 c0       	rjmp	.+134    	; 0xcae <main+0xc6>
		{
			displayUser(user);
 c28:	8b 81       	ldd	r24, Y+3	; 0x03
 c2a:	0e 94 92 02 	call	0x524	; 0x524 <displayUser>
			ReadNone();
 c2e:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <ReadNone>
			PORTB = 0;
 c32:	88 e3       	ldi	r24, 0x38	; 56
 c34:	90 e0       	ldi	r25, 0x00	; 0
 c36:	fc 01       	movw	r30, r24
 c38:	10 82       	st	Z, r1
			
			
			previousUser = user;					//store the user to check if that user has had 3 attempts
 c3a:	8b 81       	ldd	r24, Y+3	; 0x03
 c3c:	8a 83       	std	Y+2, r24	; 0x02
			attemptPasscode = InputPasscode();		// Read the passcode from the keypad
 c3e:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <InputPasscode>
 c42:	dc 01       	movw	r26, r24
 c44:	cb 01       	movw	r24, r22
 c46:	8c 83       	std	Y+4, r24	; 0x04
 c48:	9d 83       	std	Y+5, r25	; 0x05
 c4a:	ae 83       	std	Y+6, r26	; 0x06
 c4c:	bf 83       	std	Y+7, r27	; 0x07
				
			if (RecallPasscode(user) == attemptPasscode)	// If the attempted passcode is equal to the stored passcode, UNLOCK
 c4e:	8b 81       	ldd	r24, Y+3	; 0x03
 c50:	0e 94 b2 03 	call	0x764	; 0x764 <RecallPasscode>
 c54:	9b 01       	movw	r18, r22
 c56:	ac 01       	movw	r20, r24
 c58:	8c 81       	ldd	r24, Y+4	; 0x04
 c5a:	9d 81       	ldd	r25, Y+5	; 0x05
 c5c:	ae 81       	ldd	r26, Y+6	; 0x06
 c5e:	bf 81       	ldd	r27, Y+7	; 0x07
 c60:	28 17       	cp	r18, r24
 c62:	39 07       	cpc	r19, r25
 c64:	4a 07       	cpc	r20, r26
 c66:	5b 07       	cpc	r21, r27
 c68:	91 f4       	brne	.+36     	; 0xc8e <main+0xa6>
			{
				delay_ms(100);
 c6a:	84 e6       	ldi	r24, 0x64	; 100
 c6c:	90 e0       	ldi	r25, 0x00	; 0
 c6e:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
				displayUnlock();
 c72:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <displayUnlock>
				while(ReadOne()!= 0x0F);		//wait until # is pressed to lock the safe
 c76:	00 00       	nop
 c78:	0e 94 84 04 	call	0x908	; 0x908 <ReadOne>
 c7c:	8f 30       	cpi	r24, 0x0F	; 15
 c7e:	e1 f7       	brne	.-8      	; 0xc78 <main+0x90>
				ReadNone();
 c80:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <ReadNone>
				PORTB = 0x00;
 c84:	88 e3       	ldi	r24, 0x38	; 56
 c86:	90 e0       	ldi	r25, 0x00	; 0
 c88:	fc 01       	movw	r30, r24
 c8a:	10 82       	st	Z, r1
 c8c:	bf cf       	rjmp	.-130    	; 0xc0c <main+0x24>
			}
			else		// If incorrect, display LOCK 
			{
				delay_ms(100);
 c8e:	84 e6       	ldi	r24, 0x64	; 100
 c90:	90 e0       	ldi	r25, 0x00	; 0
 c92:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
				displayLock();
 c96:	0e 94 97 01 	call	0x32e	; 0x32e <displayLock>
				attempts = attempts + 1;	// Increment number of attempts by 1
 c9a:	89 81       	ldd	r24, Y+1	; 0x01
 c9c:	8f 5f       	subi	r24, 0xFF	; 255
 c9e:	89 83       	std	Y+1, r24	; 0x01
					
				if (attempts >= 3)	// Ensure number of passcode attempts < 3
 ca0:	89 81       	ldd	r24, Y+1	; 0x01
 ca2:	83 30       	cpi	r24, 0x03	; 3
 ca4:	08 f4       	brcc	.+2      	; 0xca8 <main+0xc0>
 ca6:	b2 cf       	rjmp	.-156    	; 0xc0c <main+0x24>
				{
					// LOCKOUT when number of attempts is more than 3
					displayLockout();
 ca8:	0e 94 7d 02 	call	0x4fa	; 0x4fa <displayLockout>
 cac:	af cf       	rjmp	.-162    	; 0xc0c <main+0x24>
				}
			}	
		}
			
			
		else if (user == 0x0E)		// If the * is pressed
 cae:	8b 81       	ldd	r24, Y+3	; 0x03
 cb0:	8e 30       	cpi	r24, 0x0E	; 14
 cb2:	c9 f4       	brne	.+50     	; 0xce6 <main+0xfe>
		{
			PORTB = 0xFF;
 cb4:	88 e3       	ldi	r24, 0x38	; 56
 cb6:	90 e0       	ldi	r25, 0x00	; 0
 cb8:	2f ef       	ldi	r18, 0xFF	; 255
 cba:	fc 01       	movw	r30, r24
 cbc:	20 83       	st	Z, r18
			if(isHeld3s())
 cbe:	0e 94 9f 05 	call	0xb3e	; 0xb3e <isHeld3s>
 cc2:	88 23       	and	r24, r24
 cc4:	49 f0       	breq	.+18     	; 0xcd8 <main+0xf0>
			{
				displayProgramming();
 cc6:	0e 94 ef 01 	call	0x3de	; 0x3de <displayProgramming>
				PORTB = 0xFF;
 cca:	88 e3       	ldi	r24, 0x38	; 56
 ccc:	90 e0       	ldi	r25, 0x00	; 0
 cce:	2f ef       	ldi	r18, 0xFF	; 255
 cd0:	fc 01       	movw	r30, r24
 cd2:	20 83       	st	Z, r18
				// ENTER PROGRAMMING MODE - check for which user is pressed
				ProgramMode();
 cd4:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <ProgramMode>
			}	
			ReadNone();
 cd8:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <ReadNone>
			PORTB = 0;
 cdc:	88 e3       	ldi	r24, 0x38	; 56
 cde:	90 e0       	ldi	r25, 0x00	; 0
 ce0:	fc 01       	movw	r30, r24
 ce2:	10 82       	st	Z, r1
 ce4:	93 cf       	rjmp	.-218    	; 0xc0c <main+0x24>
		}
			
		else // If any other key is pressed
		{
			delay_ms(100);
 ce6:	84 e6       	ldi	r24, 0x64	; 100
 ce8:	90 e0       	ldi	r25, 0x00	; 0
 cea:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
			displayIncorrect();
 cee:	0e 94 17 02 	call	0x42e	; 0x42e <displayIncorrect>
		}		
    }
 cf2:	8c cf       	rjmp	.-232    	; 0xc0c <main+0x24>

00000cf4 <ProgramMode>:
 cf4:	cf 93       	push	r28
 cf6:	df 93       	push	r29
 cf8:	cd b7       	in	r28, 0x3d	; 61
 cfa:	de b7       	in	r29, 0x3e	; 62
 cfc:	2b 97       	sbiw	r28, 0x0b	; 11
 cfe:	0f b6       	in	r0, 0x3f	; 63
 d00:	f8 94       	cli
 d02:	de bf       	out	0x3e, r29	; 62
 d04:	0f be       	out	0x3f, r0	; 63
 d06:	cd bf       	out	0x3d, r28	; 61
 d08:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <ReadNone>
 d0c:	19 82       	std	Y+1, r1	; 0x01
 d0e:	0e 94 84 04 	call	0x908	; 0x908 <ReadOne>
 d12:	8a 83       	std	Y+2, r24	; 0x02
 d14:	8a 81       	ldd	r24, Y+2	; 0x02
 d16:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <isUser>
 d1a:	88 23       	and	r24, r24
 d1c:	09 f4       	brne	.+2      	; 0xd20 <ProgramMode+0x2c>
 d1e:	76 c0       	rjmp	.+236    	; 0xe0c <ProgramMode+0x118>
 d20:	8a 81       	ldd	r24, Y+2	; 0x02
 d22:	0e 94 92 02 	call	0x524	; 0x524 <displayUser>
 d26:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <ReadNone>
 d2a:	88 e3       	ldi	r24, 0x38	; 56
 d2c:	90 e0       	ldi	r25, 0x00	; 0
 d2e:	2f ef       	ldi	r18, 0xFF	; 255
 d30:	fc 01       	movw	r30, r24
 d32:	20 83       	st	Z, r18
 d34:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <InputPasscode>
 d38:	dc 01       	movw	r26, r24
 d3a:	cb 01       	movw	r24, r22
 d3c:	8b 83       	std	Y+3, r24	; 0x03
 d3e:	9c 83       	std	Y+4, r25	; 0x04
 d40:	ad 83       	std	Y+5, r26	; 0x05
 d42:	be 83       	std	Y+6, r27	; 0x06
 d44:	8a 81       	ldd	r24, Y+2	; 0x02
 d46:	0e 94 b2 03 	call	0x764	; 0x764 <RecallPasscode>
 d4a:	9b 01       	movw	r18, r22
 d4c:	ac 01       	movw	r20, r24
 d4e:	8b 81       	ldd	r24, Y+3	; 0x03
 d50:	9c 81       	ldd	r25, Y+4	; 0x04
 d52:	ad 81       	ldd	r26, Y+5	; 0x05
 d54:	be 81       	ldd	r27, Y+6	; 0x06
 d56:	28 17       	cp	r18, r24
 d58:	39 07       	cpc	r19, r25
 d5a:	4a 07       	cpc	r20, r26
 d5c:	5b 07       	cpc	r21, r27
 d5e:	09 f0       	breq	.+2      	; 0xd62 <ProgramMode+0x6e>
 d60:	3e c0       	rjmp	.+124    	; 0xdde <ProgramMode+0xea>
 d62:	84 e6       	ldi	r24, 0x64	; 100
 d64:	90 e0       	ldi	r25, 0x00	; 0
 d66:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 d6a:	0e 94 40 01 	call	0x280	; 0x280 <displayUnlockProg>
 d6e:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <ReadNone>
 d72:	88 e3       	ldi	r24, 0x38	; 56
 d74:	90 e0       	ldi	r25, 0x00	; 0
 d76:	2f ef       	ldi	r18, 0xFF	; 255
 d78:	fc 01       	movw	r30, r24
 d7a:	20 83       	st	Z, r18
 d7c:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <InputPasscode>
 d80:	dc 01       	movw	r26, r24
 d82:	cb 01       	movw	r24, r22
 d84:	8f 83       	std	Y+7, r24	; 0x07
 d86:	98 87       	std	Y+8, r25	; 0x08
 d88:	a9 87       	std	Y+9, r26	; 0x09
 d8a:	ba 87       	std	Y+10, r27	; 0x0a
 d8c:	8f 81       	ldd	r24, Y+7	; 0x07
 d8e:	98 85       	ldd	r25, Y+8	; 0x08
 d90:	a9 85       	ldd	r26, Y+9	; 0x09
 d92:	ba 85       	ldd	r27, Y+10	; 0x0a
 d94:	bc 01       	movw	r22, r24
 d96:	cd 01       	movw	r24, r26
 d98:	0e 94 c1 05 	call	0xb82	; 0xb82 <DigitCount>
 d9c:	8b 87       	std	Y+11, r24	; 0x0b
 d9e:	8b 85       	ldd	r24, Y+11	; 0x0b
 da0:	86 30       	cpi	r24, 0x06	; 6
 da2:	08 f4       	brcc	.+2      	; 0xda6 <ProgramMode+0xb2>
 da4:	b4 cf       	rjmp	.-152    	; 0xd0e <ProgramMode+0x1a>
 da6:	8b 85       	ldd	r24, Y+11	; 0x0b
 da8:	89 30       	cpi	r24, 0x09	; 9
 daa:	08 f0       	brcs	.+2      	; 0xdae <ProgramMode+0xba>
 dac:	b0 cf       	rjmp	.-160    	; 0xd0e <ProgramMode+0x1a>
 dae:	8f 81       	ldd	r24, Y+7	; 0x07
 db0:	98 85       	ldd	r25, Y+8	; 0x08
 db2:	a9 85       	ldd	r26, Y+9	; 0x09
 db4:	ba 85       	ldd	r27, Y+10	; 0x0a
 db6:	4a 81       	ldd	r20, Y+2	; 0x02
 db8:	bc 01       	movw	r22, r24
 dba:	cd 01       	movw	r24, r26
 dbc:	0e 94 2a 03 	call	0x654	; 0x654 <storePasscode>
 dc0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <displayUnlock>
 dc4:	00 00       	nop
 dc6:	0e 94 84 04 	call	0x908	; 0x908 <ReadOne>
 dca:	8f 30       	cpi	r24, 0x0F	; 15
 dcc:	e1 f7       	brne	.-8      	; 0xdc6 <ProgramMode+0xd2>
 dce:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <ReadNone>
 dd2:	88 e3       	ldi	r24, 0x38	; 56
 dd4:	90 e0       	ldi	r25, 0x00	; 0
 dd6:	fc 01       	movw	r30, r24
 dd8:	10 82       	st	Z, r1
 dda:	19 82       	std	Y+1, r1	; 0x01
 ddc:	23 c0       	rjmp	.+70     	; 0xe24 <ProgramMode+0x130>
 dde:	84 e6       	ldi	r24, 0x64	; 100
 de0:	90 e0       	ldi	r25, 0x00	; 0
 de2:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 de6:	0e 94 97 01 	call	0x32e	; 0x32e <displayLock>
 dea:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <ReadNone>
 dee:	88 e3       	ldi	r24, 0x38	; 56
 df0:	90 e0       	ldi	r25, 0x00	; 0
 df2:	2f ef       	ldi	r18, 0xFF	; 255
 df4:	fc 01       	movw	r30, r24
 df6:	20 83       	st	Z, r18
 df8:	89 81       	ldd	r24, Y+1	; 0x01
 dfa:	8f 5f       	subi	r24, 0xFF	; 255
 dfc:	89 83       	std	Y+1, r24	; 0x01
 dfe:	89 81       	ldd	r24, Y+1	; 0x01
 e00:	83 30       	cpi	r24, 0x03	; 3
 e02:	08 f4       	brcc	.+2      	; 0xe06 <ProgramMode+0x112>
 e04:	84 cf       	rjmp	.-248    	; 0xd0e <ProgramMode+0x1a>
 e06:	0e 94 7d 02 	call	0x4fa	; 0x4fa <displayLockout>
 e0a:	81 cf       	rjmp	.-254    	; 0xd0e <ProgramMode+0x1a>
 e0c:	84 e6       	ldi	r24, 0x64	; 100
 e0e:	90 e0       	ldi	r25, 0x00	; 0
 e10:	0e 94 5a 00 	call	0xb4	; 0xb4 <delay_ms>
 e14:	0e 94 17 02 	call	0x42e	; 0x42e <displayIncorrect>
 e18:	88 e3       	ldi	r24, 0x38	; 56
 e1a:	90 e0       	ldi	r25, 0x00	; 0
 e1c:	2f ef       	ldi	r18, 0xFF	; 255
 e1e:	fc 01       	movw	r30, r24
 e20:	20 83       	st	Z, r18
 e22:	75 cf       	rjmp	.-278    	; 0xd0e <ProgramMode+0x1a>
 e24:	2b 96       	adiw	r28, 0x0b	; 11
 e26:	0f b6       	in	r0, 0x3f	; 63
 e28:	f8 94       	cli
 e2a:	de bf       	out	0x3e, r29	; 62
 e2c:	0f be       	out	0x3f, r0	; 63
 e2e:	cd bf       	out	0x3d, r28	; 61
 e30:	df 91       	pop	r29
 e32:	cf 91       	pop	r28
 e34:	08 95       	ret

00000e36 <__udivmodsi4>:
 e36:	a1 e2       	ldi	r26, 0x21	; 33
 e38:	1a 2e       	mov	r1, r26
 e3a:	aa 1b       	sub	r26, r26
 e3c:	bb 1b       	sub	r27, r27
 e3e:	fd 01       	movw	r30, r26
 e40:	0d c0       	rjmp	.+26     	; 0xe5c <__udivmodsi4_ep>

00000e42 <__udivmodsi4_loop>:
 e42:	aa 1f       	adc	r26, r26
 e44:	bb 1f       	adc	r27, r27
 e46:	ee 1f       	adc	r30, r30
 e48:	ff 1f       	adc	r31, r31
 e4a:	a2 17       	cp	r26, r18
 e4c:	b3 07       	cpc	r27, r19
 e4e:	e4 07       	cpc	r30, r20
 e50:	f5 07       	cpc	r31, r21
 e52:	20 f0       	brcs	.+8      	; 0xe5c <__udivmodsi4_ep>
 e54:	a2 1b       	sub	r26, r18
 e56:	b3 0b       	sbc	r27, r19
 e58:	e4 0b       	sbc	r30, r20
 e5a:	f5 0b       	sbc	r31, r21

00000e5c <__udivmodsi4_ep>:
 e5c:	66 1f       	adc	r22, r22
 e5e:	77 1f       	adc	r23, r23
 e60:	88 1f       	adc	r24, r24
 e62:	99 1f       	adc	r25, r25
 e64:	1a 94       	dec	r1
 e66:	69 f7       	brne	.-38     	; 0xe42 <__udivmodsi4_loop>
 e68:	60 95       	com	r22
 e6a:	70 95       	com	r23
 e6c:	80 95       	com	r24
 e6e:	90 95       	com	r25
 e70:	9b 01       	movw	r18, r22
 e72:	ac 01       	movw	r20, r24
 e74:	bd 01       	movw	r22, r26
 e76:	cf 01       	movw	r24, r30
 e78:	08 95       	ret

00000e7a <__tablejump2__>:
 e7a:	ee 0f       	add	r30, r30
 e7c:	ff 1f       	adc	r31, r31
 e7e:	05 90       	lpm	r0, Z+
 e80:	f4 91       	lpm	r31, Z
 e82:	e0 2d       	mov	r30, r0
 e84:	09 94       	ijmp

00000e86 <_exit>:
 e86:	f8 94       	cli

00000e88 <__stop_program>:
 e88:	ff cf       	rjmp	.-2      	; 0xe88 <__stop_program>
